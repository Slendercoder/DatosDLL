a <- matrix(c(1, 0, 0, 0, 1, 0), c(3, 2))
a
a <- matrix(c(0, 1, 0, 0, 1, 0), c(3, 2))
a
a <- matrix(c(1, 1, 0, 0, 1, 0), c(3, 2))
a
dist(a)
a <- matrix(c(1, 1, 0, 0, 1, 1), c(3, 2))
a
dist(a)
dist(a)[1:2]
a <- matrix(c(1, 0, 0, 0, 1, 1), c(3, 2))
a
a <- matrix(c(1, 0, 0, 0, 1, 1), c(3, 2))
dist(a)[1:2]
dist(a)
vector_normal <- rnorm(30, 50, 10)
vector_normal[20] <- NA
vector_normal
mean(vector_normal)
vector_normal <- rnorm(30, 50, 10)
mean(vector_normal)
var(vector_normal)
sd(vector_normal)
mean(vector_normal)
vector_normal <- rnorm(30, 50, 10)
vector_normal[20] <- NA
var(vector_normal)
var(vector_normal, na.rm=TRUE)
m <- matrix(nrow=12, ncol=6)
v <- sample(300:650, 72)
v
m <- matrix(v, nrow=12, ncol=6)
m
v <- sample(300:650, 72, replace = T)
m <- matrix(v, nrow=12, ncol=6)
m
nombres_filas <- c("Enero", "Febrero",
"Marzo", "Abril", "Mayo", "Junio",
"Julio", "Agosto", "Septiembre",
"Octubre", "Noviembre", "Diciembre")
rownames(m) <- nombres_filas
m
x <- cor(m)
x
coefcorrel <- function(x) {
mmuestral <- sum(x)/len(x)
return(mmuestral)
}
coefcorrel(c(1:10))
mmuestral <- sum(x)/lenght(x)
coefcorrel <- function(x) {
mmuestral <- sum(x)/lenght(x)
return(mmuestral)
}
coefcorrel(c(1:10))
mmuestral <- sum(x)/length(x)
coefcorrel <- function(x) {
mmuestral <- sum(x)/length(x)
return(mmuestral)
}
coefcorrel(c(1:10))
setwd("~/Documents/Repositorios/DatosDLL/12-16-18-23-27-sept-2019/Analysis")
dfCalificacionGroup = read.csv('calificacion_group.csv')
dfCalificacionGroup$Exp <- as.character('Pairs')
head(dfCalificacionGroup)
dfCalificacionSingle = read.csv('calificacion_single.csv')
dfCalificacionSingle$Exp <- as.character('Single')
head(dfCalificacionSingle)
dfCalificacion <- rbind(
dfCalificacionGroup[c(
'Player',
'Kind',
'GradingA',
'GradingB',
'GradingC',
'GradingD',
'Exp')
],
dfCalificacionSingle[c(
'Player',
'Kind',
'GradingA',
'GradingB',
'GradingC',
'GradingD',
'Exp')
]
)
calificacion_summary <- dfCalificacion %>% # the names of the new data frame and the data frame to be summarised
group_by(Kind) %>%   # the grouping variable
summarise(mean_PL = mean(GradingA),  # calculates the mean of each group
sd_PL = sd(GradingA), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingA)/sqrt(n())) # calculates the standard error of each group
library(ggplot2)
library(Rmisc)
library(ggplot2)
library(gridExtra)
library(latex2exp)
library(grid)
library(dplyr)
calificacion_summary <- dfCalificacion %>% # the names of the new data frame and the data frame to be summarised
group_by(Kind, Exp) %>%   # the grouping variable
summarise(mean_PL = mean(GradingA),  # calculates the mean of each group
sd_PL = sd(GradingA), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingA)/sqrt(n())) # calculates the standard error of each group
gA <- ggplot(calificacion_summary, aes(Kind, mean_PL)) +
geom_col() +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.", x = "Expertice") +
theme_classic()
calificacion_summary <- dfCalificacion %>% # the names of the new data frame and the data frame to be summarised
group_by(Kind, Exp) %>%   # the grouping variable
summarise(mean_PL = mean(GradingB),  # calculates the mean of each group
sd_PL = sd(GradingB), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingB)/sqrt(n())) # calculates the standard error of each group
gB <- ggplot(calificacion_summary, aes(Kind, mean_PL)) +
geom_col() +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), width=0.2) +
ylim(c(0,8)) +
ggtitle("Irish Wolfhound") +
labs(y="Confidence ± s.d.", x = "Expertice") +
theme_classic()
gB
calificacion_summary <- dfCalificacion %>% # the names of the new data frame and the data frame to be summarised
group_by(Kind, Exp) %>%   # the grouping variable
summarise(mean_PL = mean(GradingA),  # calculates the mean of each group
sd_PL = sd(GradingA), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingA)/sqrt(n())) # calculates the standard error of each group
gA <- ggplot(calificacion_summary, aes(Kind, mean_PL, group=Exp, color=Exp)) +
geom_col() +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.", x = "Expertice") +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, mean_PL, group=Exp, fill=Exp)) +
geom_col() +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.", x = "Expertice") +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_col() +
geom_errorbar(aes(y=mean_PL, ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.", x = "Expertice") +
theme_classic()
calificacion_summary <- dfCalificacion %>% # the names of the new data frame and the data frame to be summarised
group_by(Exp, Kind) %>%   # the grouping variable
summarise(mean_PL = mean(GradingA),  # calculates the mean of each group
sd_PL = sd(GradingA), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingA)/sqrt(n())) # calculates the standard error of each group
gA <- ggplot(calificacion_summary, aes(Kind, mean_PL, group=Exp, fill=Exp)) +
geom_col() +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.", x = "Expertice") +
theme_classic()
gA
dfCalificacionSingle = read.csv('calificacion_single.csv')
dfCalificacionSingle$Exp <- as.character('Single')
head(dfCalificacionSingle)
dfCalificacion <- rbind(
dfCalificacionGroup[c(
'Player',
'Kind',
'GradingA',
'GradingB',
'GradingC',
'GradingD',
'Exp')
],
dfCalificacionSingle[c(
'Player',
'Kind',
'GradingA',
'GradingB',
'GradingC',
'GradingD',
'Exp')
]
)
calificacion_summary <- dfCalificacion %>% # the names of the new data frame and the data frame to be summarised
group_by(Exp, Kind) %>%   # the grouping variable
summarise(mean_PL = mean(GradingA),  # calculates the mean of each group
sd_PL = sd(GradingA), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingA)/sqrt(n())) # calculates the standard error of each group
gA <- ggplot(calificacion_summary, aes(Kind, mean_PL, group=Exp, fill=Exp)) +
geom_col() +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.", x = "Expertice") +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, mean_PL, group=Exp, fill=Exp)) +
geom_col() +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), position="dodge", width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.", x = "Expertice") +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, mean_PL, group=Exp, fill=Exp)) +
geom_bar() +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), position="dodge", width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.", x = "Expertice") +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_bar(aes(y=mean_PL)) +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.", x = "Expertice") +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_col(aes(y=mean_PL)) +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.", x = "Expertice") +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.", x = "Expertice") +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), position="dodge", width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.", x = "Expertice") +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), position="dodge", width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.",
x = "Expertice",
fill = TeX('bias$_{focal}$')) +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL), position="dodge", width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.",
x = "Expertice",
fill = "Condition") +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
position=position_dodge(),
width=0.2) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.",
x = "Expertice",
fill = "Condition") +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
position=position_dodge()) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.",
x = "Expertice",
fill = "Condition") +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
width=0.2,
position=position_dodge()) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.",
x = "Expertice",
fill = "Condition") +
theme_classic()
gA
gA <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence ± s.d.",
x = "Expertice",
fill = "Condition") +
theme_classic()
gA
calificacion_summary <- dfCalificacion %>% # the names of the new data frame and the data frame to be summarised
group_by(Exp, Kind) %>%   # the grouping variable
summarise(mean_PL = mean(GradingB),  # calculates the mean of each group
sd_PL = sd(GradingB), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingB)/sqrt(n())) # calculates the standard error of each group
gB <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Irish Wolfhound") +
labs(y="Confidence ± s.d.",
x = "Expertice",
fill = "Condition") +
theme_classic()
gB
calificacion_summary <- dfCalificacion %>% # the names of the new data frame and the data frame to be summarised
group_by(Exp, Kind) %>%   # the grouping variable
summarise(mean_PL = mean(GradingC),  # calculates the mean of each group
sd_PL = sd(GradingC), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingC)/sqrt(n())) # calculates the standard error of each group
gC <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Norwich Terrier") +
labs(y="Confidence ± s.d.",
x = "Expertice",
fill = "Condition") +
theme_classic()
gC
calificacion_summary <- dfCalificacion %>% # the names of the new data frame and the data frame to be summarised
group_by(Exp, Kind) %>%   # the grouping variable
summarise(mean_PL = mean(GradingD),  # calculates the mean of each group
sd_PL = sd(GradingD), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingD)/sqrt(n())) # calculates the standard error of each group
gD <- ggplot(calificacion_summary, aes(Kind, group=Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Scottish Deerhound") +
labs(y="Confidence ± s.d.",
x = "Expertice",
fill = "Condition") +
theme_classic()
gD
gGrading <- grid.arrange(gA, gB, gC, gD, nrow = 2)
