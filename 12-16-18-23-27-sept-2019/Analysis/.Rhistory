labs(color = "Condition") +
xlab("Round") +
ylab("Av. correct classification (%)") +
scale_color_colorblind() +
ylim(c(0,1.3)) +
ggtitle("Cairn Terrier") +
theme_bw() +
theme(legend.position="right")
gGameRaza1
dfCalificacionPerro <- dfCalificacion[dfCalificacion$Kind == 'C', ]
dfCalificacionPerro <- dfCalificacionPerro[dfCalificacionPerro$Raza == 'hound', ]
comunicacion_summary <- dfCalificacionPerro %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp, Round) %>%   # the grouping variable
dplyr::summarise(meanCorrect = mean(Correct, na.rm=TRUE),  # calculates the mean of each group
sd_PL = sd(Correct, na.rm=TRUE), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(Correct, na.rm=TRUE)/sqrt(n())) # calculates the standard error of each group
head(comunicacion_summary)
gGameRaza2 <- ggplot(comunicacion_summary, aes(x=Round, y=meanCorrect, color=Exp, group=Exp)) +
geom_line(size=0.8) +
geom_ribbon(aes(ymin = meanCorrect - sd_PL,
ymax = meanCorrect + sd_PL), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
labs(color = "Condition") +
xlab("Round") +
ylab("Av. correct classification (%)") +
scale_color_colorblind() +
ylim(c(0,1.3)) +
ggtitle("Norwich Terrier") +
theme_bw() +
theme(legend.position="right")
gGameRaza2
dfCalificacionPerro <- dfCalificacion[dfCalificacion$Kind == 'B', ]
dfCalificacionPerro <- dfCalificacionPerro[dfCalificacionPerro$Raza == 'terrier', ]
comunicacion_summary <- dfCalificacionPerro %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp, Round) %>%   # the grouping variable
dplyr::summarise(meanCorrect = mean(Correct, na.rm=TRUE),  # calculates the mean of each group
sd_PL = sd(Correct, na.rm=TRUE), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(Correct, na.rm=TRUE)/sqrt(n())) # calculates the standard error of each group
head(comunicacion_summary)
gGameRaza3 <- ggplot(comunicacion_summary, aes(x=Round, y=meanCorrect, color=Exp, group=Exp)) +
geom_line(size=0.8) +
geom_ribbon(aes(ymin = meanCorrect - sd_PL,
ymax = meanCorrect + sd_PL), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
labs(color = "Condition") +
xlab("Round") +
ylab("Av. correct classification (%)") +
scale_color_colorblind() +
ylim(c(0,1.3)) +
ggtitle("Irish Wolfhound") +
theme_bw() +
theme(legend.position="right")
gGameRaza3
dfCalificacionPerro <- dfCalificacion[dfCalificacion$Kind == 'D', ]
dfCalificacionPerro <- dfCalificacionPerro[dfCalificacionPerro$Raza == 'terrier', ]
comunicacion_summary <- dfCalificacionPerro %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp, Round) %>%   # the grouping variable
dplyr::summarise(meanCorrect = mean(Correct, na.rm=TRUE),  # calculates the mean of each group
sd_PL = sd(Correct, na.rm=TRUE), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(Correct, na.rm=TRUE)/sqrt(n())) # calculates the standard error of each group
head(comunicacion_summary)
gGameRaza4 <- ggplot(comunicacion_summary, aes(x=Round, y=meanCorrect, color=Exp, group=Exp)) +
geom_line(size=0.8) +
geom_ribbon(aes(ymin = meanCorrect - sd_PL,
ymax = meanCorrect + sd_PL), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
labs(color = "Condition") +
xlab("Round") +
ylab("Av. correct classification (%)") +
scale_color_colorblind() +
ylim(c(0,1.3)) +
ggtitle("Scottish Deerhound") +
theme_bw() +
theme(legend.position="bottom")
gGameRaza4
legend <- get_legend(gGameRaza4)
gGameRaza1 <- gGameRaza1 + theme(legend.position="none")
gGameRaza2 <- gGameRaza2 + theme(legend.position="none")
gGameRaza3 <- gGameRaza3 + theme(legend.position="none")
gGameRaza4 <- gGameRaza4 + theme(legend.position="none")
g <- grid.arrange(gGameRaza1, gGameRaza3, gGameRaza2, gGameRaza4,
nrow=2,
top="Novices performance in game rounds",
bottom=legend)
dfHounds <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
dfCalificacionGroup = read.csv('calificacion_group.csv')
dfCalificacionGroup$Exp <- as.character('Pairs')
head(dfCalificacionGroup)
dfCalificacionSingle = read.csv('calificacion_single.csv')
dfCalificacionSingle$Exp <- as.character('Single')
head(dfCalificacionSingle)
dfCalificacion <- rbind(
dfCalificacionGroup[c(
'Player',
'Kind',
'GradingA',
'GradingB',
'GradingC',
'GradingD',
'Exp')
],
dfCalificacionSingle[c(
'Player',
'Kind',
'GradingA',
'GradingB',
'GradingC',
'GradingD',
'Exp')
]
)
head(dfCalificacion)
dfHounds <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
head(dfHounds)
calificacion_summary <- dfHounds %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingB),  # calculates the mean of each group
sd_PL = sd(GradingB), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingB)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gB <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Irish Wolfhound") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic() +
theme(legend.position="none")
gB
calificacion_summary <- dfHounds %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingD),  # calculates the mean of each group
sd_PL = sd(GradingD), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingD)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gD <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Scottish Deerhound") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic()  +
theme(legend.position="none")
gD
gLaymenHounds <- grid.arrange(gB, gD, nrow = 2, top="Hound laymen (Terrier experts)")
dfTerriers <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
head(dfTerriers)
calificacion_summary <- dfTerriers %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingA),  # calculates the mean of each group
sd_PL = sd(GradingA), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingA)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gA <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic() +
theme(legend.position="none")
gA
calificacion_summary <- dfTerriers %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingC),  # calculates the mean of each group
sd_PL = sd(GradingC), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingC)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gC <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Norwich Terrier") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic() +
theme(legend.position="none")
gC
gLaymenTerriers <- grid.arrange(gA, gC, nrow = 2, top="Terrier laymen (Hound experts)")
gLaymen <- grid.arrange(gLaymenTerriers, gLaymenTerriers, nrow=1)
gLaymen <- grid.arrange(gLaymenTerriers, gLaymenHounds, nrow=1)
dfHounds <- dfCalificacion[dfCalificacion$Raza == 'terrier', ]
head(dfHounds)
dfCalificacion$Raza
dfCalificacionGroup = read.csv('calificacion_group.csv')
dfCalificacionGroup$Exp <- as.character('Pairs')
head(dfCalificacionGroup)
dfCalificacionSingle = read.csv('calificacion_single.csv')
dfCalificacionSingle$Exp <- as.character('Single')
head(dfCalificacionSingle)
dfCalificacion <- rbind(
dfCalificacionGroup[c(
'Player',
'Kind',
'GradingA',
'GradingB',
'GradingC',
'GradingD',
'Exp')
],
dfCalificacionSingle[c(
'Player',
'Kind',
'GradingA',
'GradingB',
'GradingC',
'GradingD',
'Exp')
]
)
head(dfCalificacion)
dfHounds <- dfCalificacion[dfCalificacion$Raza == 'terrier', ]
head(dfHounds)
calificacion_summary <- dfHounds %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingB),  # calculates the mean of each group
sd_PL = sd(GradingB), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingB)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gB <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Irish Wolfhound") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic() +
theme(legend.position="none")
gB
dfHounds <- dfCalificacion[dfCalificacion$Raza == 'terrier', ]
head(dfHounds)
dfHounds <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
head(dfHounds)
df = read.csv('indice.csv')
head(df)
df[10:20, ]
comunicacion_summary <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N) %>%
ungroup() %>%
dplyr::group_by(Round) %>%
dplyr::summarise(meanNovatada = mean(N, na.rm=TRUE),
sd_PL = sd(N, na.rm=TRUE), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(N, na.rm=TRUE)/sqrt(n())) # calculates the standard error of each group
head(comunicacion_summary)
gNovatada <- ggplot(comunicacion_summary, aes(x=Round, y=meanNovatada)) +
geom_line(size=0.8) +
#  geom_ribbon(aes(ymin = Score - sd,
#                  ymax = Score + sd), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
#  labs(color = "Expertise") +
xlab("Round") +
ylab("Av. number of dogs outside expertice") +
ylim(c(0,3)) +
ggtitle("Dogs outside expertice") +
theme_bw() +
theme(legend.position="none")
gNovatada
comunicacion_summary <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(pregunto = sum(Pregunto),
N = sum(Novatada)) %>%
ungroup() %>%
dplyr::group_by(Round) %>%
dplyr::summarise(meanNumerator = mean(pregunto, na.rm=TRUE),
sd_PL = sd(pregunto, na.rm=TRUE), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(pregunto, na.rm=TRUE)/sqrt(n())) # calculates the standard error of each group
head(comunicacion_summary)
gPregunto <- ggplot(comunicacion_summary, aes(x=Round, y=meanNumerator)) +
geom_line(size=0.8) +
#  geom_ribbon(aes(ymin = Score - sd,
#                  ymax = Score + sd), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
#  labs(color = "Expertise") +
xlab("Round") +
ylab("Av. number of messages") +
ylim(c(0,3)) +
ggtitle("Messages") +
theme_bw() +
theme(legend.position="none")
gPregunto
comunicacion_summary <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N) %>%
ungroup() %>%
dplyr::group_by(Round) %>%
dplyr::summarise(meanIndice = mean(indiceCop, na.rm=TRUE),
sd_PL = sd(indiceCop, na.rm=TRUE), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(indiceCop, na.rm=TRUE)/sqrt(n())) # calculates the standard error of each group
head(comunicacion_summary)
gIndice <- ggplot(comunicacion_summary, aes(x=Round, y=meanIndice)) +
geom_line(size=0.8) +
geom_ribbon(aes(ymin = meanIndice - sd_PL,
ymax = meanIndice + sd_PL), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
#  labs(color = "Expertise") +
xlab("Round") +
ylab("Av. cooperation index") +
#  ylim(c(0,1)) +
ggtitle("Cooperation index") +
theme_bw() +
theme(legend.position="none")
gIndice
comunicacion_summary <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Raza, Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N) %>%
ungroup() %>%
dplyr::group_by(Round) %>%
dplyr::summarise(meanIndice = mean(indiceCop, na.rm=TRUE),
sd_PL = sd(indiceCop, na.rm=TRUE), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(indiceCop, na.rm=TRUE)/sqrt(n())) # calculates the standard error of each group
head(comunicacion_summary)
comunicacion_summary <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Raza, Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N) %>%
ungroup() %>%
dplyr::group_by(Raza, Round) %>%
dplyr::summarise(meanIndice = mean(indiceCop, na.rm=TRUE),
sd_PL = sd(indiceCop, na.rm=TRUE), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(indiceCop, na.rm=TRUE)/sqrt(n())) # calculates the standard error of each group
head(comunicacion_summary)
gIndice <- ggplot(comunicacion_summary, aes(x=Round, y=meanIndice, group=Raza, color=Raza)) +
geom_line(size=0.8) +
geom_ribbon(aes(ymin = meanIndice - sd_PL,
ymax = meanIndice + sd_PL), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
#  labs(color = "Expertise") +
xlab("Round") +
ylab("Av. cooperation index") +
#  ylim(c(0,1)) +
ggtitle("Cooperation index") +
theme_bw() +
theme(legend.position="none")
gIndice
gIndice <- ggplot(comunicacion_summary, aes(x=Round, y=meanIndice, group=Raza, color=Raza)) +
geom_line(size=0.8) +
geom_ribbon(aes(ymin = meanIndice - sd_PL,
ymax = meanIndice + sd_PL), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
#  labs(color = "Expertise") +
xlab("Round") +
ylab("Av. cooperation index") +
#  ylim(c(0,1)) +
ggtitle("Cooperation index") +
theme_bw() +
theme(legend.position="bottom")
gIndice
gIndice <- ggplot(comunicacion_summary, aes(x=Round, y=meanIndice, group=Raza, color=Raza)) +
geom_line(size=0.8) +
geom_ribbon(aes(ymin = meanIndice - sd_PL,
ymax = meanIndice + sd_PL), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
#  labs(color = "Expertise") +
xlab("Round") +
ylab("Av. cooperation index") +
#  ylim(c(0,1)) +
ggtitle("Cooperation index") +
theme_bw() +
theme(legend.position="right")
gIndiceRaza
legend <- get_legend(gIndiceRaza)
gIndiceRaza <- gIndiceRaza + theme(legend.position="none")
g <- grid.arrange(gIndice, gIndiceRaza, nrow=1)
comunicacion_summary <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N) %>%
ungroup() %>%
dplyr::group_by(Round) %>%
dplyr::summarise(meanIndice = mean(indiceCop, na.rm=TRUE),
sd_PL = sd(indiceCop, na.rm=TRUE), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(indiceCop, na.rm=TRUE)/sqrt(n())) # calculates the standard error of each group
head(comunicacion_summary)
gIndice <- ggplot(comunicacion_summary, aes(x=Round, y=meanIndice)) +
geom_line(size=0.8) +
geom_ribbon(aes(ymin = meanIndice - sd_PL,
ymax = meanIndice + sd_PL), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
#  labs(color = "Expertise") +
xlab("Round") +
ylab("Av. cooperation index") +
#  ylim(c(0,1)) +
ggtitle("Cooperation index") +
theme_bw() +
theme(legend.position="none")
gIndice
comunicacion_summary <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Raza, Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N) %>%
ungroup() %>%
dplyr::group_by(Raza, Round) %>%
dplyr::summarise(meanIndice = mean(indiceCop, na.rm=TRUE),
sd_PL = sd(indiceCop, na.rm=TRUE), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(indiceCop, na.rm=TRUE)/sqrt(n())) # calculates the standard error of each group
head(comunicacion_summary)
gIndiceRaza <- ggplot(comunicacion_summary, aes(x=Round, y=meanIndice, group=Raza, color=Raza)) +
geom_line(size=0.8) +
geom_ribbon(aes(ymin = meanIndice - sd_PL,
ymax = meanIndice + sd_PL), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
#  labs(color = "Expertise") +
xlab("Round") +
ylab("Av. cooperation index") +
#  ylim(c(0,1)) +
ggtitle("Cooperation index") +
theme_bw() +
theme(legend.position="right")
gIndiceRaza
legend <- get_legend(gIndiceRaza)
gIndiceRaza <- gIndiceRaza + theme(legend.position="none")
g <- grid.arrange(gIndice, gIndiceRaza, nrow=1)
g <- grid.arrange(gIndice, gIndiceRaza, nrow=1, right=legend)
comunicacion_summary <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N) %>%
ungroup() %>%
dplyr::group_by(Round) %>%
dplyr::summarise(meanIndice = mean(indiceCop, na.rm=TRUE),
sd_PL = sd(indiceCop, na.rm=TRUE), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(indiceCop, na.rm=TRUE)/sqrt(n())) # calculates the standard error of each group
head(comunicacion_summary)
gIndice <- ggplot(comunicacion_summary, aes(x=Round, y=meanIndice)) +
geom_line(size=0.8) +
geom_ribbon(aes(ymin = meanIndice - sd_PL,
ymax = meanIndice + sd_PL), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
#  labs(color = "Expertise") +
xlab("Round") +
ylab("Av. cooperation index") +
#  ylim(c(0,1)) +
ggtitle("Aggregate") +
theme_bw() +
theme(legend.position="none")
gIndice
#############################################################################################
# Encontrando indice por tipo de experticia
#############################################################################################
comunicacion_summary <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Raza, Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N) %>%
ungroup() %>%
dplyr::group_by(Raza, Round) %>%
dplyr::summarise(meanIndice = mean(indiceCop, na.rm=TRUE),
sd_PL = sd(indiceCop, na.rm=TRUE), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(indiceCop, na.rm=TRUE)/sqrt(n())) # calculates the standard error of each group
head(comunicacion_summary)
gIndiceRaza <- ggplot(comunicacion_summary, aes(x=Round, y=meanIndice, group=Raza, color=Raza)) +
geom_line(size=0.8) +
geom_ribbon(aes(ymin = meanIndice - sd_PL,
ymax = meanIndice + sd_PL), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
#  labs(color = "Expertise") +
xlab("Round") +
ylab("Av. cooperation index") +
#  ylim(c(0,1)) +
ggtitle("Per type of expertise") +
theme_bw() +
theme(legend.position="right")
gIndiceRaza
legend <- get_legend(gIndiceRaza)
gIndiceRaza <- gIndiceRaza + theme(legend.position="none")
g <- grid.arrange(gIndice, gIndiceRaza, nrow=1, right=legend, top="Cooperation index")
