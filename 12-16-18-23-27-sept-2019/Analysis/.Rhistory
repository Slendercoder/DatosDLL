#  geom_ribbon(aes(ymin = meanIndice - sd_PL,
#                  ymax = meanIndice + sd_PL), alpha = 0.2) +
#  scale_colour_manual(values = c("terrier" = "#999999", "hound" = "#E69F00")) +
#  labs(color = "Expertise") +
xlab("Round") +
ylab("Av. cooperation index") +
ylim(c(0,1)) +
#  ggtitle("Aggregate") +
theme_bw() +
theme(legend.position="none")
gIndice
comunicacion_summary <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Raza, Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N) %>%
ungroup() %>%
dplyr::group_by(Raza, Round) %>%
dplyr::summarise(meanIndice = mean(indiceCop, na.rm=TRUE),
sd_PL = sd(indiceCop, na.rm=TRUE), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(indiceCop, na.rm=TRUE)/sqrt(n())) # calculates the standard error of each group
head(comunicacion_summary)
indiceCooperacion <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N)
indiceCooperacion <- indiceCooperacion %>% select(1, 2, 5)
indiceCooperacion <- indiceCooperacion[indiceCooperacion$Round < 8, ]
head(indiceCooperacion)
dfPuntajeGroup = read.csv('puntaje_group.csv')
dfPuntajeGroupGame <- dfPuntajeGroup[dfPuntajeGroup$Stage == 2, ]
head(dfPuntajeGroupGame)
dfScore <- dfPuntajeGroupGame %>%
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(Score = median(Score))
head(dfScore)
total <- merge(indiceCooperacion, dfScore, by=c('Round', 'Player'))
head(total)
dim(total)
g <- ggplot(total, aes(x=indiceCop, y=Score)) +
geom_point(color='blue', alpha=0.2) +
geom_smooth(method = "lm", se = TRUE) +
xlab("Cooperation index") +
ylab("Score") +
theme_bw()
g
# Regressing indice coop w.r.t. Score
model1 <- lm(Score ~ indiceCop, data = total)
summary(model1) # => Positive correlation is significant
par(mfrow=c(2,2)) # init 4 charts in 1 panel
plot(model1)
g
indiceCooperacion <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N)
indiceCooperacion <- indiceCooperacion %>% select(1, 2, 5)
#indiceCooperacion <- indiceCooperacion[indiceCooperacion$Round < 8, ]
head(indiceCooperacion)
dfPuntajeGroup = read.csv('puntaje_group.csv')
dfPuntajeGroupGame <- dfPuntajeGroup[dfPuntajeGroup$Stage == 2, ]
head(dfPuntajeGroupGame)
dfScore <- dfPuntajeGroupGame %>%
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(Score = median(Score))
head(dfScore)
total <- merge(indiceCooperacion, dfScore, by=c('Round', 'Player'))
head(total)
dim(total)
g <- ggplot(total, aes(x=indiceCop, y=Score)) +
geom_point(color='blue', alpha=0.2) +
geom_smooth(method = "lm", se = TRUE) +
xlab("Cooperation index") +
ylab("Score") +
theme_bw()
g
# Regressing indice coop w.r.t. Score
model1 <- lm(Score ~ indiceCop, data = total)
summary(model1) # => Positive correlation is significant
indiceCooperacion <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N)
indiceCooperacion <- indiceCooperacion %>% select(1, 2, 5)
indiceCooperacion <- indiceCooperacion[indiceCooperacion$Round < 8, ]
head(indiceCooperacion)
dfPuntajeGroup = read.csv('puntaje_group.csv')
dfPuntajeGroupGame <- dfPuntajeGroup[dfPuntajeGroup$Stage == 2, ]
head(dfPuntajeGroupGame)
dfScore <- dfPuntajeGroupGame %>%
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(Score = median(Score))
head(dfScore)
total <- merge(indiceCooperacion, dfScore, by=c('Round', 'Player'))
head(total)
dim(total)
g <- ggplot(total, aes(x=indiceCop, y=Score)) +
geom_point(color='blue', alpha=0.2) +
geom_smooth(method = "lm", se = TRUE) +
xlab("Cooperation index") +
ylab("Score") +
theme_bw()
g
# Regressing indice coop w.r.t. Score
model1 <- lm(Score ~ indiceCop, data = total)
summary(model1) # => Positive correlation is significant
indiceCooperacion <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N)
indiceCooperacion <- indiceCooperacion %>% select(1, 2, 5)
#indiceCooperacion <- indiceCooperacion[indiceCooperacion$Round < 8, ]
indiceCooperacion <- indiceCooperacion[indiceCooperacion$Round > 17, ]
head(indiceCooperacion)
dfPuntajeGroup = read.csv('puntaje_group.csv')
dfPuntajeGroupGame <- dfPuntajeGroup[dfPuntajeGroup$Stage == 2, ]
head(dfPuntajeGroupGame)
dfScore <- dfPuntajeGroupGame %>%
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(Score = median(Score))
head(dfScore)
total <- merge(indiceCooperacion, dfScore, by=c('Round', 'Player'))
head(total)
dim(total)
g <- ggplot(total, aes(x=indiceCop, y=Score)) +
geom_point(color='blue', alpha=0.2) +
geom_smooth(method = "lm", se = TRUE) +
xlab("Cooperation index") +
ylab("Score") +
theme_bw()
g
# Regressing indice coop w.r.t. Score
model1 <- lm(Score ~ indiceCop, data = total)
summary(model1) # => Positive correlation is significant
indiceCooperacion <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N)
indiceCooperacion <- indiceCooperacion %>% select(1, 2, 5)
indiceCooperacion <- indiceCooperacion[indiceCooperacion$Round < 5, ]
#indiceCooperacion <- indiceCooperacion[indiceCooperacion$Round > 17, ]
head(indiceCooperacion)
dfPuntajeGroup = read.csv('puntaje_group.csv')
dfPuntajeGroupGame <- dfPuntajeGroup[dfPuntajeGroup$Stage == 2, ]
head(dfPuntajeGroupGame)
dfScore <- dfPuntajeGroupGame %>%
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(Score = median(Score))
head(dfScore)
total <- merge(indiceCooperacion, dfScore, by=c('Round', 'Player'))
head(total)
dim(total)
g <- ggplot(total, aes(x=indiceCop, y=Score)) +
geom_point(color='blue', alpha=0.2) +
geom_smooth(method = "lm", se = TRUE) +
xlab("Cooperation index") +
ylab("Score") +
theme_bw() +
ggtitle("First 5 rounds")
g
# Regressing indice coop w.r.t. Score
model1 <- lm(Score ~ indiceCop, data = total)
summary(model1) # => Positive correlation is significant
indiceCooperacion <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N)
indiceCooperacion <- indiceCooperacion %>% select(1, 2, 5)
#indiceCooperacion <- indiceCooperacion[indiceCooperacion$Round < 5, ]
indiceCooperacion <- indiceCooperacion[indiceCooperacion$Round > 17, ]
head(indiceCooperacion)
dfPuntajeGroup = read.csv('puntaje_group.csv')
dfPuntajeGroupGame <- dfPuntajeGroup[dfPuntajeGroup$Stage == 2, ]
head(dfPuntajeGroupGame)
dfScore <- dfPuntajeGroupGame %>%
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(Score = median(Score))
head(dfScore)
total <- merge(indiceCooperacion, dfScore, by=c('Round', 'Player'))
head(total)
dim(total)
g <- ggplot(total, aes(x=indiceCop, y=Score)) +
geom_point(color='blue', alpha=0.2) +
geom_smooth(method = "lm", se = TRUE) +
xlab("Cooperation index") +
ylab("Score") +
theme_bw() +
ggtitle("First 5 rounds")
g
# Regressing indice coop w.r.t. Score
model1 <- lm(Score ~ indiceCop, data = total)
summary(model1) # => Positive correlation is significant
indiceCooperacion <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N)
indiceCooperacion <- indiceCooperacion %>% select(1, 2, 5)
#indiceCooperacion <- indiceCooperacion[indiceCooperacion$Round < 6, ]
indiceCooperacion <- indiceCooperacion[indiceCooperacion$Round > 19, ]
head(indiceCooperacion)
dfPuntajeGroup = read.csv('puntaje_group.csv')
dfPuntajeGroupGame <- dfPuntajeGroup[dfPuntajeGroup$Stage == 2, ]
head(dfPuntajeGroupGame)
dfScore <- dfPuntajeGroupGame %>%
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(Score = median(Score))
head(dfScore)
total <- merge(indiceCooperacion, dfScore, by=c('Round', 'Player'))
head(total)
dim(total)
g <- ggplot(total, aes(x=indiceCop, y=Score)) +
geom_point(color='blue', alpha=0.2) +
geom_smooth(method = "lm", se = TRUE) +
xlab("Cooperation index") +
ylab("Score") +
theme_bw() +
ggtitle("Las 5 rounds")
g
# Regressing indice coop w.r.t. Score
model1 <- lm(Score ~ indiceCop, data = total)
summary(model1) # => Positive correlation is significant
g <- ggplot(total, aes(x=indiceCop, y=Score)) +
geom_point(color='blue', alpha=0.2) +
geom_smooth(method = "lm", se = TRUE) +
xlab("Cooperation index") +
ylab("Score") +
theme_bw() +
ggtitle("Last 5 rounds")
g
indiceCooperacion <- df %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(numerator = sum(Numerador),
N = sum(Novatada)) %>%
mutate(indiceCop = numerator/N)
indiceCooperacion <- indiceCooperacion %>% select(1, 2, 5)
indiceCooperacion <- indiceCooperacion[indiceCooperacion$Round < 6, ]
#indiceCooperacion <- indiceCooperacion[indiceCooperacion$Round > 19, ]
head(indiceCooperacion)
dfPuntajeGroup = read.csv('puntaje_group.csv')
dfPuntajeGroupGame <- dfPuntajeGroup[dfPuntajeGroup$Stage == 2, ]
head(dfPuntajeGroupGame)
dfScore <- dfPuntajeGroupGame %>%
dplyr::group_by(Round, Player) %>%   # the grouping variable
dplyr::summarise(Score = median(Score))
head(dfScore)
total <- merge(indiceCooperacion, dfScore, by=c('Round', 'Player'))
head(total)
dim(total)
g <- ggplot(total, aes(x=indiceCop, y=Score)) +
geom_point(color='blue', alpha=0.2) +
geom_smooth(method = "lm", se = TRUE) +
xlab("Cooperation index") +
ylab("Score") +
theme_bw() +
ggtitle("First 5 rounds")
g
# Regressing indice coop w.r.t. Score
model1 <- lm(Score ~ indiceCop, data = total)
summary(model1) # => Positive correlation is significant
dfTerriers <- dfCom[dfCom$Raza == 'terrier', ]
dfTerriersB <- dfTerriers[dfTerriers$Rotulo == 'B', ]
dfTerriersB <- dfTerriersB[dfTerriersB$suposicion != '', ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$suposicion), ]
levels(dfTerriersB$suposicion)
dfTerriersB$suposicion <- mapvalues(dfTerriersB$suposicion,
from = levels(dfTerriersB$suposicion),
to = c('Cairn Terrier',
'Irish Wolfhound',
'Norwich Terrier',
'Scottish Deerhound',
'No guess'))
comunicacion_summary <- dfTerriersB %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Rotulo, suposicion) %>%   # the grouping variable
dplyr::summarise(n = n()) %>% # calculates the standard error of each group
mutate(freq = n/sum(n))
head(comunicacion_summary)
colores <- c(cbp2[2], cbp2[4], cbp2[8])
gB <- ggplot(comunicacion_summary, aes(suposicion, fill=suposicion)) +
geom_col(aes(y=freq)) +
ggtitle("Guess before asking is this Irish Wolfhound?") +
ylim(c(0,0.7)) +
labs(y="Relative frequency",
x = "Guess") +
scale_fill_manual(values = colores) +
theme_classic() +
theme(legend.position="none")
gB
dfTerriers <- dfCom[dfCom$Raza == 'terrier', ]
dfTerriersD <- dfTerriers[dfTerriers$Rotulo == 'D', ]
dfTerriersD <- dfTerriersD[dfTerriersD$suposicion != '', ]
dfTerriersD <- dfTerriersD[complete.cases(dfTerriersD$suposicion), ]
levels(dfTerriersD$suposicion)
dfTerriersD$suposicion <- mapvalues(dfTerriersD$suposicion,
from = levels(dfTerriersD$suposicion),
to = c('Cairn Terrier',
'Irish Wolfhound',
'Norwich Terrier',
'Scottish Deerhound',
'No guess'))
comunicacion_summary <- dfTerriersD %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Rotulo, suposicion) %>%   # the grouping variable
dplyr::summarise(n = n()) %>% # calculates the standard error of each group
mutate(freq = n/sum(n))
head(comunicacion_summary)
#colores <- c(cbp2[3], cbp2[5], cbp2[8])
gD <- ggplot(comunicacion_summary, aes(suposicion, fill=suposicion)) +
geom_col(aes(y=freq)) +
ggtitle("Guess before asking is this Scottish Deerhound?") +
ylim(c(0,0.7)) +
labs(y="Relative frequency",
x = "Guess") +
scale_fill_manual(values = colores) +
theme_classic() +
theme(legend.position="none")
gD
gExpertTerriers <- grid.arrange(gB, gD, nrow = 1, top="Terrier experts")
gExpertTerriers <- grid.arrange(gB, gD, nrow = 2, top="Terrier experts")
dfTerriers <- dfCom[dfCom$Raza == 'terrier', ]
dfTerriersB <- dfTerriers[dfTerriers$Rotulo == 'B', ]
dfTerriersB <- dfTerriersB[dfTerriersB$suposicion != '', ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$suposicion), ]
levels(dfTerriersB$suposicion)
dfTerriersB$suposicion <- mapvalues(dfTerriersB$suposicion,
from = levels(dfTerriersB$suposicion),
to = c('Cairn Terrier',
'Irish Wolfhound',
'Norwich Terrier',
'Scottish Deerhound',
'No guess'))
head(dfTerriersB)
dfCom
head(dfCom)
head(dfTerriersB)
dfTerriersB$Kind
table(dfTerriersB$Kind)
plot(table(dfTerriersB$Kind))
dfTerriersB$Kind
dfTerriersB$Kind <- mapvalues(dfTerriersB$Kind,
from = levels(dfTerriersB$Kind),
to = c('Incorrect',
'Correct',
'Incorrect',
'Incorrect',
'NA'))
plot(table(dfTerriersB$Kind))
dfTerriers <- dfCom[dfCom$Raza == 'terrier', ]
dfTerriersB <- dfTerriers[dfTerriers$Rotulo == 'B', ]
dfTerriersB <- dfTerriersB[dfTerriersB$suposicion != '', ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$suposicion), ]
levels(dfTerriersB$suposicion)
dfTerriersB$suposicion <- mapvalues(dfTerriersB$suposicion,
from = levels(dfTerriersB$suposicion),
to = c('Cairn Terrier',
'Irish Wolfhound',
'Norwich Terrier',
'Scottish Deerhound',
'No guess'))
head(dfTerriersB)
dfTerriersB$Kind <- mapvalues(dfTerriersB$Kind,
from = levels(dfTerriersB$Kind),
to = c('NA',
'Incorrect',
'Correct',
'Incorrect',
'Incorrect'))
plot(table(dfTerriersB$Kind))
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$Kind), ]
dfTerriers <- dfCom[dfCom$Raza == 'terrier', ]
dfTerriersB <- dfTerriers[dfTerriers$Rotulo == 'B', ]
dfTerriersB <- dfTerriersB[dfTerriersB$suposicion != '', ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$suposicion), ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$Kind), ]
levels(dfTerriersB$suposicion)
dfTerriersB$suposicion <- mapvalues(dfTerriersB$suposicion,
from = levels(dfTerriersB$suposicion),
to = c('Cairn Terrier',
'Irish Wolfhound',
'Norwich Terrier',
'Scottish Deerhound',
'No guess'))
dfTerriers <- dfCom[dfCom$Raza == 'terrier', ]
dfTerriersB <- dfTerriers[dfTerriers$Rotulo == 'B', ]
dfTerriersB <- dfTerriersB[dfTerriersB$suposicion != '', ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$suposicion), ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$Kind), ]
levels(dfTerriersB$suposicion)
dfTerriersB$suposicion <- mapvalues(dfTerriersB$suposicion,
from = levels(dfTerriersB$suposicion),
to = c('Cairn Terrier',
'Irish Wolfhound',
'Norwich Terrier',
'Scottish Deerhound',
'No guess'))
levels(dfTerriersB$Kind)
dfTerriersB$Kind <- mapvalues(dfTerriersB$Kind,
from = levels(dfTerriersB$Kind),
to = c('NA',
'Incorrect',
'Correct',
'Incorrect',
'Incorrect'))
head(dfTerriersB)
plot(table(dfTerriersB$Kind))
levels(dfTerriersB$Kind)
dfTerriers <- dfCom[dfCom$Raza == 'terrier', ]
dfTerriersB <- dfTerriers[dfTerriers$Rotulo == 'B', ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$suposicion), ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$Kind), ]
dfTerriersB <- dfTerriersB[dfTerriersB$suposicion != '', ]
levels(dfTerriersB$suposicion)
dfTerriersB$suposicion <- mapvalues(dfTerriersB$suposicion,
from = levels(dfTerriersB$suposicion),
to = c('Cairn Terrier',
'Irish Wolfhound',
'Norwich Terrier',
'Scottish Deerhound',
'No guess'))
levels(dfTerriersB$Kind)
dfTerriers <- dfCom[dfCom$Raza == 'terrier', ]
dfTerriersB <- dfTerriers[dfTerriers$Rotulo == 'B', ]
dfTerriersB <- dfTerriersB[dfTerriersB$suposicion != '', ]
dfTerriersB
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$suposicion), ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$Kind), ]
dfTerriersB
dfTerriersB <- dfTerriersB[dfTerriersB$Kind != '', ]
levels(dfTerriersB$suposicion)
dfTerriersB$suposicion <- mapvalues(dfTerriersB$suposicion,
from = levels(dfTerriersB$suposicion),
to = c('Cairn Terrier',
'Irish Wolfhound',
'Norwich Terrier',
'Scottish Deerhound',
'No guess'))
levels(dfTerriersB$Kind)
dfTerriers <- dfCom[dfCom$Raza == 'terrier', ]
dfTerriersB <- dfTerriers[dfTerriers$Rotulo == 'B', ]
dfTerriersB <- dfTerriersB[dfTerriersB$suposicion != '', ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$suposicion), ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$Kind), ]
dfTerriersB <- dfTerriersB[dfTerriersB$Kind != '', ]
levels(dfTerriersB$Kind)
dfTerriersB$Kind
dfTerriersB$Kind <- mapvalues(dfTerriersB$Kind,
from = levels(dfTerriersB$Kind),
to = c('NA',
'Incorrect',
'Correct',
'Incorrect',
'Incorrect'))
head(dfTerriersB)
plot(table(dfTerriersB$Kind))
tabla <- table(dfTerriersB$Kind)
gB <- ggplot(comunicacion_summary, aes(suposicion, fill=suposicion)) +
geom_col(aes(y=freq)) +
ggtitle("Guess before asking is this Irish Wolfhound?") +
ylim(c(0,0.7)) +
labs(y="Relative frequency",
x = "Guess") +
scale_fill_manual(values = colores) +
theme_classic() +
theme(legend.position="none")
gB <- ggplot(tabla)
head(dfTerriersB)
tabla <- table(dfTerriersB$Kind)
tabla
dfTerriers <- dfCom[dfCom$Raza == 'terrier', ]
#dfTerriersB <- dfTerriers[dfTerriers$Rotulo == 'B', ]
dfTerriersB <- dfTerriersB[dfTerriersB$suposicion != '', ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$suposicion), ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$Kind), ]
dfTerriersB <- dfTerriersB[dfTerriersB$Kind != '', ]
levels(dfTerriersB$suposicion)
dfTerriersB$suposicion <- mapvalues(dfTerriersB$suposicion,
from = levels(dfTerriersB$suposicion),
to = c('Cairn Terrier',
'Irish Wolfhound',
'Norwich Terrier',
'Scottish Deerhound',
'No guess'))
levels(dfTerriersB$Kind)
dfTerriersB$Kind <- mapvalues(dfTerriersB$Kind,
from = levels(dfTerriersB$Kind),
to = c('NA',
'Incorrect',
'Correct',
'Incorrect',
'Incorrect'))
levels(dfTerriersB$Kind)
dfTerriers <- dfCom[dfCom$Raza == 'terrier', ]
#dfTerriersB <- dfTerriers[dfTerriers$Rotulo == 'B', ]
dfTerriersB <- dfTerriersB[dfTerriersB$suposicion != '', ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$suposicion), ]
dfTerriersB <- dfTerriersB[dfTerriersB$Kind != '', ]
dfTerriersB <- dfTerriersB[complete.cases(dfTerriersB$Kind), ]
levels(dfTerriersB$suposicion)
dfTerriersB$suposicion <- mapvalues(dfTerriersB$suposicion,
from = levels(dfTerriersB$suposicion),
to = c('Cairn Terrier',
'Irish Wolfhound',
'Norwich Terrier',
'Scottish Deerhound',
'No guess'))
levels(dfTerriersB$Kind)
