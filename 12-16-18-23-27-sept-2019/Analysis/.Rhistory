source('C:/Users/edgar.andrade/Dropbox/R_codes/Cleaner.R')
source('C:/Users/edgar.andrade/Dropbox/R_codes/Cleaner.R')
source('C:/Users/edgar.andrade/Dropbox/R_codes/Cleaner.R')
k <- c('UP', 'DOWN', 'LEFT', 'RIGHT')
simil <- c(0.00828690813362833, 0.005807575804463176, 0.006915344714869243, 0.0063325332924590964)
plot(k, simil)
k <- as.factor(k)
simil <- c(0.00828690813362833, 0.005807575804463176, 0.006915344714869243, 0.0063325332924590964)
plot(k, simil)
plot.bar(k, simil)
k <- as.factor(k, levels = k)
k <- factor(levels = c('UP', 'DOWN', 'LEFT', 'RIGHT'))
simil <- c(0.00828690813362833, 0.005807575804463176, 0.006915344714869243, 0.0063325332924590964)
plot(k, simil)
k
k <- factor(c('UP', 'DOWN', 'LEFT', 'RIGHT'), levels = c('UP', 'DOWN', 'LEFT', 'RIGHT'))
simil <- c(0.00828690813362833, 0.005807575804463176, 0.006915344714869243, 0.0063325332924590964)
k
plot(k, simil)
barplot(k, simil)
barplot(simil)
barplot(simil,names.arg=k,xlab="k",ylab="simil")
barplot(simil,names.arg=k,xlab="k",ylab="simil(i,k)")
barplot(simil,names.arg=k,xlab="k",ylab="simil(j,k)")
k <- factor(c('UP', 'DOWN', 'RIGHT', 'LEFT'), levels = c('UP', 'DOWN', 'RIGHT', 'LEFT'))
# simil <- c(0.00828690813362833, 0.005807575804463176, 0.006915344714869243, 0.0063325332924590964)
simil <- c(0.00828690813362833, 0.005807575804463176, 0.006915344714869243, 0.0063325332924590964)
barplot(simil,names.arg=k,xlab="k",ylab="simil(j,k)")
# simil <- c(0.00828690813362833, 0.005807575804463176, 0.006915344714869243, 0.0063325332924590964)
simil <- c(0.001321846881452074, 0.0008084487680939567, 0.0010292206550046401, 0.0009112308870657136)
barplot(simil,names.arg=k,xlab="k",ylab="simil(j,k)")
# simil <- c(0.00828690813362833, 0.005807575804463176, 0.006915344714869243, 0.0063325332924590964)
simil <- c(0.0015034391929775724, 0.0011650419902061269, 0.0011650419902061269, 0.0010292206550046401)
barplot(simil,names.arg=k,xlab="k",ylab="simil(j,k)")
k <- factor(c('UP', 'DOWN', 'LEFT', 'RIGHT'), levels = c('UP', 'DOWN', 'LEFT', 'RIGHT'))
simil <- c(0.029683678087870948, 0.003552868406221362, 0.0012981647494301816, 0.004905280532044819)
barplot(simil,names.arg=k,xlab="k",ylab="simil(j,k)")
library(ggplot2)
library(Rmisc)
library(dplyr)
library(gridExtra)
get_legend<-function(myggplot){
tmp <- ggplot_gtable(ggplot_build(myggplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
} # end get_legend
dfCalificacionGroup = read.csv('calificacion_group.csv')
dfCalificacionGroup$Exp <- as.character('Pairs')
head(dfCalificacionGroup)
dfCalificacionSingle = read.csv('calificacion_single.csv')
dfCalificacionSingle$Exp <- as.character('Single')
head(dfCalificacionSingle)
dfCalificacion <- rbind(
dfCalificacionGroup[c(
'Player',
'Kind',
'GradingA',
'GradingB',
'GradingC',
'GradingD',
'Exp')
],
dfCalificacionSingle[c(
'Player',
'Kind',
'GradingA',
'GradingB',
'GradingC',
'GradingD',
'Exp')
]
)
head(dfCalificacion)
setwd("~/DatosDLL/12-16-18-23-27-sept-2019/Analysis")
dfCalificacionGroup = read.csv('calificacion_group.csv')
dfCalificacionGroup$Exp <- as.character('Pairs')
head(dfCalificacionGroup)
dfCalificacionSingle = read.csv('calificacion_single.csv')
dfCalificacionSingle$Exp <- as.character('Single')
head(dfCalificacionSingle)
dfCalificacion <- rbind(
dfCalificacionGroup[c(
'Player',
'Kind',
'GradingA',
'GradingB',
'GradingC',
'GradingD',
'Exp')
],
dfCalificacionSingle[c(
'Player',
'Kind',
'GradingA',
'GradingB',
'GradingC',
'GradingD',
'Exp')
]
)
head(dfCalificacion)
dfHounds <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
head(dfHounds)
calificacion_summary <- dfHounds %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingB),  # calculates the mean of each group
sd_PL = sd(GradingB), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingB)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gB <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Irish Wolfhound") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic() +
theme(legend.position="none")
gB
calificacion_summary <- dfHounds %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingD),  # calculates the mean of each group
sd_PL = sd(GradingD), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingD)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gD <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Scottish Deerhound") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic()  +
theme(legend.position="none")
gD
gLaymenHounds <- grid.arrange(gB, gD, nrow = 2, top="Hound laymen (Terrier experts)")
