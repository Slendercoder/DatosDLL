'GradingC',
'GradingD',
'Exp')
]
)
head(dfCalificacion)
calificacion_summary <- dfCalificacion %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingA),  # calculates the mean of each group
sd_PL = sd(GradingA), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingA)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gA <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic() +
theme(legend.position="none")
gA
calificacion_summary <- dfCalificacion %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingC),  # calculates the mean of each group
sd_PL = sd(GradingC), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingC)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gC <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Norwich Terrier") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic() +
theme(legend.position="none")
gC
gGradingTerriers <- grid.arrange(gA, gC, nrow = 1, bottom=legend)
calificacion_summary <- dfCalificacion %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingB),  # calculates the mean of each group
sd_PL = sd(GradingB), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingB)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gB <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Irish Wolfhound") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic() +
theme(legend.position="none")
gB
calificacion_summary <- dfCalificacion %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingD),  # calculates the mean of each group
sd_PL = sd(GradingD), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingD)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gD <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Scottish Deerhound") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic() +
theme(legend.position="none")
gD
gGradingHounds <- grid.arrange(gB, gD, nrow = 1, bottom=legend)
gGrading <- grid.arrange(gA, gB, gC, gD, nrow = 2)
dfHounds <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
head(dfHounds)
calificacion_summary <- dfHounds %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingB),  # calculates the mean of each group
sd_PL = sd(GradingB), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingB)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gB <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Irish Wolfhound") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic() +
theme(legend.position="none")
gB
calificacion_summary <- dfHounds %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingD),  # calculates the mean of each group
sd_PL = sd(GradingD), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingD)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gD <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Scottish Deerhound") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic()  +
theme(legend.position="none")
gD
gExpertHounds <- grid.arrange(gB, gD, nrow = 2, top="Hound experts")
dfTerriers <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
head(dfTerriers)
calificacion_summary <- dfTerriers %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingA),  # calculates the mean of each group
sd_PL = sd(GradingA), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingA)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gA <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Cairn Terrier") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic() +
theme(legend.position="none")
gA
calificacion_summary <- dfTerriers %>% # the names of the new data frame and the data frame to be summarised
dplyr::group_by(Exp) %>%   # the grouping variable
dplyr::summarise(mean_PL = mean(GradingC),  # calculates the mean of each group
sd_PL = sd(GradingC), # calculates the standard deviation of each group
n_PL = n(),  # calculates the sample size per group
SE_PL = sd(GradingC)/sqrt(n())) # calculates the standard error of each group
head(calificacion_summary)
gC <- ggplot(calificacion_summary, aes(Exp, fill=Exp)) +
geom_col(aes(y=mean_PL), position="dodge") +
geom_errorbar(aes(ymin = mean_PL - sd_PL, ymax = mean_PL + sd_PL),
size=0.3,
width=0.2,
position=position_dodge(.9)) +
ylim(c(0,8)) +
ggtitle("Norwich Terrier") +
labs(y="Confidence in understanding",
x = "Condition") +
theme_classic() +
theme(legend.position="none")
gC
gExpertTerriers <- grid.arrange(gA, gC, nrow = 2, top="Terrier experts")
gExpert <- grid.arrange(gExpertTerriers, gExpertHounds, nrow=1)
View(dfCalificacionSingle)
View(dfCalificacion)
library(dplyr)
df1 <- df1 %>% select(Player, GradingA, Exp)
df1
df1 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df1
df1 <- df1 %>% select(Player, GradingA, Exp)
df1
df1 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df1 <- df1 %>% select(Player, GradingA, Exp)
df2 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df2 <- df2 %>% select(Player, GradingD, Exp)
df1
column.names(df1)
colnames(df1)
df1 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df1 <- df1 %>% select(Player, GradingA, Exp)
colnames(df1) <- c('Player', 'Grading', 'Exp')
df1
df2 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df2 <- df2 %>% select(Player, GradingD, Exp)
colnames(df2) <- c('Player', 'Grading', 'Exp')
dfT <- rbind(df1, df2)
df1 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df1 <- df1 %>% select(Player, GradingA, Exp)
colnames(df1) <- c('Player', 'Grading', 'Exp')
df2 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df2 <- df2 %>% select(Player, GradingC, Exp)
colnames(df2) <- c('Player', 'Grading', 'Exp')
dfT <- rbind(df1, df2)
dfT
df1 <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
df1 <- df1 %>% select(Player, GradingB, Exp)
colnames(df1) <- c('Player', 'Grading', 'Exp')
df2 <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
df2 <- df2 %>% select(Player, GradingD, Exp)
colnames(df2) <- c('Player', 'Grading', 'Exp')
dfH <- rbind(df1, df2)
df <- rbind(dfT, dfH)
df
# Density plot
g2 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
#  scale_colour_manual(values = c("Observed behavior" = "#999999", "WSLS" = "#E69F00", "FRA" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Source of data") +
ggtitle('Kernel density estimate') +
theme_bw()
g2
df1 <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
df1 <- df1 %>% select(Player, GradingA, Exp)
colnames(df1) <- c('Player', 'Grading', 'Exp')
df2 <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
df2 <- df2 %>% select(Player, GradingC, Exp)
colnames(df2) <- c('Player', 'Grading', 'Exp')
dfT <- rbind(df1, df2)
df1 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df1 <- df1 %>% select(Player, GradingB, Exp)
colnames(df1) <- c('Player', 'Grading', 'Exp')
df2 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df2 <- df2 %>% select(Player, GradingD, Exp)
colnames(df2) <- c('Player', 'Grading', 'Exp')
dfH <- rbind(df1, df2)
df <- rbind(dfT, dfH)
# Density plot
g1 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
#  scale_colour_manual(values = c("Observed behavior" = "#999999", "WSLS" = "#E69F00", "FRA" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Source of data") +
ggtitle('Kernel density estimate') +
theme_bw()
g1
df1 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df1 <- df1 %>% select(Player, GradingA, Exp)
colnames(df1) <- c('Player', 'Grading', 'Exp')
df2 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df2 <- df2 %>% select(Player, GradingC, Exp)
colnames(df2) <- c('Player', 'Grading', 'Exp')
dfT <- rbind(df1, df2)
df1 <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
df1 <- df1 %>% select(Player, GradingB, Exp)
colnames(df1) <- c('Player', 'Grading', 'Exp')
df2 <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
df2 <- df2 %>% select(Player, GradingD, Exp)
colnames(df2) <- c('Player', 'Grading', 'Exp')
dfH <- rbind(df1, df2)
df <- rbind(dfT, dfH)
# Density plot
g2 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
#  scale_colour_manual(values = c("Observed behavior" = "#999999", "WSLS" = "#E69F00", "FRA" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Source of data") +
ggtitle("Experts\' understanding") +
theme_bw()
g2
df1 <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
# Density plot
g2 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
#  scale_colour_manual(values = c("Observed behavior" = "#999999", "WSLS" = "#E69F00", "FRA" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Condition") +
ggtitle("Experts\' understanding") +
theme_bw()
g2
df1 <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
df1 <- df1 %>% select(Player, GradingA, Exp)
colnames(df1) <- c('Player', 'Grading', 'Exp')
df2 <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
df2 <- df2 %>% select(Player, GradingC, Exp)
colnames(df2) <- c('Player', 'Grading', 'Exp')
dfT <- rbind(df1, df2)
df1 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df1 <- df1 %>% select(Player, GradingB, Exp)
colnames(df1) <- c('Player', 'Grading', 'Exp')
df2 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df2 <- df2 %>% select(Player, GradingD, Exp)
colnames(df2) <- c('Player', 'Grading', 'Exp')
dfH <- rbind(df1, df2)
df <- rbind(dfT, dfH)
# Density plot
g1 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
#  scale_colour_manual(values = c("Observed behavior" = "#999999", "WSLS" = "#E69F00", "FRA" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Condition") +
ggtitle("Novices\' understanding") +
theme_bw()
g1
# Density plot
g1 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
#  scale_colour_manual(values = c("Observed behavior" = "#999999", "WSLS" = "#E69F00", "FRA" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Condition") +
ggtitle("Novices\' understanding") +
theme_bw() +
theme(legend.position="bottom")
g1
legend <- get_legend(g1)
g1 <- g1 + theme(legend.position="none")
g2 <- g2 + theme(legend.position="none")
p <- grid.arrange(g1, g2, nrow=1, bottom=legend)
mSingle <- mean(df$Grading[df$Exp=="single"])
mSingle
df$Exp
mSingle <- mean(df$Grading[df$Exp=="Single"])
mSingle
# Density plot
g2 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
+ geom_vline(xintercept = mSingle, linetype="dotted",
color = "blue", size=1.5)
# Density plot
g2 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
+ geom_vline(xintercept = mSingle, linetype="dotted",
color = "blue", size=1.5) +
#  scale_colour_manual(values = c("Observed behavior" = "#999999", "WSLS" = "#E69F00", "FRA" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Condition") +
ggtitle("Experts\' understanding") +
theme_bw()
g2
# Density plot
g2 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
+ geom_vline(xintercept = mSingle, linetype="dotted",
color = "blue", size=1.5) +
#  scale_colour_manual(values = c("Observed behavior" = "#999999", "WSLS" = "#E69F00", "FRA" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Condition") +
ggtitle("Experts\' understanding") +
theme_bw()
g2 <- g2 + geom_vline(xintercept = mSingle, linetype="dotted",
color = "blue", size=1.5)
g2
g2 <- g2 + geom_vline(xintercept = mSingle, linetype="dotted",
color = "blue", size=0.8)
g2
# Density plot
g2 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
#  scale_colour_manual(values = c("Observed behavior" = "#999999", "WSLS" = "#E69F00", "FRA" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Condition") +
ggtitle("Experts\' understanding") +
theme_bw()
g2 <- g2 + geom_vline(xintercept = mSingle, linetype="dotted",
color = "blue", size=0.8)
g2
mPair <- mean(df$Grading[df$Exp=="Pair"])
mPair
df$Exp
df <- rbind(dfT, dfH)
mSingle <- mean(df$Grading[df$Exp=="Single"])
mPair <- mean(df$Grading[df$Exp=="Pair"])
mPair
df$Exp
mPair <- mean(df$Grading[df$Exp=="Pairs"])
mPair
g2 <- g2 + geom_vline(xintercept = mPair, linetype="dotted",
color = "red", size=0.8)
g2
df1 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df1 <- df1 %>% select(Player, GradingA, Exp)
colnames(df1) <- c('Player', 'Grading', 'Exp')
df2 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df2 <- df2 %>% select(Player, GradingC, Exp)
colnames(df2) <- c('Player', 'Grading', 'Exp')
dfT <- rbind(df1, df2)
df1 <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
df1 <- df1 %>% select(Player, GradingB, Exp)
colnames(df1) <- c('Player', 'Grading', 'Exp')
df2 <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
df2 <- df2 %>% select(Player, GradingD, Exp)
colnames(df2) <- c('Player', 'Grading', 'Exp')
dfH <- rbind(df1, df2)
df <- rbind(dfT, dfH)
mSingle <- mean(df$Grading[df$Exp=="Single"])
mPair <- mean(df$Grading[df$Exp=="Pairs"])
# Density plot
g2 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
#  scale_colour_manual(values = c("Observed behavior" = "#999999", "WSLS" = "#E69F00", "FRA" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Condition") +
ggtitle("Experts\' understanding") +
theme_bw()
g2 <- g2 + geom_vline(xintercept = mSingle, linetype="dotted",
color = "blue", size=0.8)
g2 <- g2 + geom_vline(xintercept = mPair, linetype="dotted",
color = "red", size=0.8)
g2
# Density plot
g2 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
scale_colour_manual(values = c("Pairs" = "#E69F00", "Single" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Condition") +
ggtitle("Experts\' understanding") +
theme_bw()
g2 <- g2 + geom_vline(xintercept = mSingle, linetype="dotted",
color = "blue", size=0.8)
g2 <- g2 + geom_vline(xintercept = mPair, linetype="dotted",
color = "red", size=0.8)
g2
# Density plot
g2 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
scale_colour_manual(values = c("Pairs" = "#E69F00", "Single" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Condition") +
ggtitle("Experts\' understanding") +
theme_bw()
g2 <- g2 + geom_vline(xintercept = mSingle, linetype="dotted",
color = "#56B4E9", size=0.8)
g2 <- g2 + geom_vline(xintercept = mPair, linetype="dotted",
color = "#E69F00", size=0.8)
g2
df1 <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
df1 <- df1 %>% select(Player, GradingA, Exp)
colnames(df1) <- c('Player', 'Grading', 'Exp')
df2 <- dfCalificacion[dfCalificacion$Kind == 'hound', ]
df2 <- df2 %>% select(Player, GradingC, Exp)
colnames(df2) <- c('Player', 'Grading', 'Exp')
dfT <- rbind(df1, df2)
df1 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df1 <- df1 %>% select(Player, GradingB, Exp)
colnames(df1) <- c('Player', 'Grading', 'Exp')
df2 <- dfCalificacion[dfCalificacion$Kind == 'terrier', ]
df2 <- df2 %>% select(Player, GradingD, Exp)
colnames(df2) <- c('Player', 'Grading', 'Exp')
dfH <- rbind(df1, df2)
df <- rbind(dfT, dfH)
mSingle <- mean(df$Grading[df$Exp=="Single"])
mPair <- mean(df$Grading[df$Exp=="Pairs"])
# Density plot
g1 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
scale_colour_manual(values = c("Pairs" = "#E69F00", "Single" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Condition") +
ggtitle("Experts\' understanding") +
theme_bw()
g1 <- g1 + geom_vline(xintercept = mSingle, linetype="dotted",
color = "#56B4E9", size=0.8)
g1 <- g1 + geom_vline(xintercept = mPair, linetype="dotted",
color = "#E69F00", size=0.8)
g1
legend <- get_legend(g1)
g1 <- g1 + theme(legend.position="none")
g2 <- g2 + theme(legend.position="none")
p <- grid.arrange(g1, g2, nrow=1, bottom=legend)
# Density plot
g1 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
scale_colour_manual(values = c("Pairs" = "#E69F00", "Single" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Condition") +
ggtitle("Experts\' understanding") +
theme_bw() +
theme(legend.position="bottom")
g1 <- g1 + geom_vline(xintercept = mSingle, linetype="dotted",
color = "#56B4E9", size=0.8)
g1 <- g1 + geom_vline(xintercept = mPair, linetype="dotted",
color = "#E69F00", size=0.8)
g1
legend <- get_legend(g1)
g1 <- g1 + theme(legend.position="none")
g2 <- g2 + theme(legend.position="none")
p <- grid.arrange(g1, g2, nrow=1, bottom=legend)
# Density plot
g1 <- ggplot(df, aes(Grading, group=Exp, color=Exp)) +
geom_density(size=1) +
scale_colour_manual(values = c("Pairs" = "#E69F00", "Single" = "#56B4E9")) +
#  scale_y_continuous(limits = c(0, 5)) +
labs(color = "Condition") +
ggtitle("Novices\' understanding") +
theme_bw() +
theme(legend.position="bottom")
g1 <- g1 + geom_vline(xintercept = mSingle, linetype="dotted",
color = "#56B4E9", size=0.8)
g1 <- g1 + geom_vline(xintercept = mPair, linetype="dotted",
color = "#E69F00", size=0.8)
g1
legend <- get_legend(g1)
g1 <- g1 + theme(legend.position="none")
g2 <- g2 + theme(legend.position="none")
p <- grid.arrange(g1, g2, nrow=1, bottom=legend)
p
p <- grid.arrange(g1, g2, nrow=1, bottom=legend)
p
